---
import MainLayout from "./MainLayout.astro";
import Header from "../components/Header/Header.astro";
import PageContent from "../components/PageContent/PageContent.astro";
import LeftSidebar from "../components/LeftSidebar/LeftSidebar.astro";
import RightSidebar from "../components/RightSidebar/RightSidebar.astro";
import type * as CONFIG from "../config";
import type { MarkdownHeading } from "astro";
import Footer from "../components/Footer/Footer.astro";

type Props = {
  frontmatter: CONFIG.Frontmatter;
  headings: MarkdownHeading[];
};

const { frontmatter, headings } = Astro.props as Props;
const currentPage = Astro.url.pathname;
---

<MainLayout frontmatter={frontmatter}>
  <Header currentPage={currentPage} />
  <main class="layout grid grid-flow-col overflow-x-hidden">
    <aside id="grid-left" class="grid-sidebar p-4" title="Site Navigation">
      <LeftSidebar currentPage={currentPage} />
    </aside>
    <div id="grid-main" class="p-3 pr-0">
      <PageContent
        frontmatter={frontmatter}
        headings={headings}
      >
        <slot />
      </PageContent>
    </div>
    <aside id="grid-right" class="grid-sidebar ml-8" title="Table of Contents">
      <RightSidebar headings={headings} />
    </aside>
  </main>
  <Footer />
</MainLayout>

<style>
  body {
    width: 100%;
    display: grid;
    grid-template-rows: var(--theme-navbar-height) 1fr;
    --gutter: 0.5rem;
    --doc-padding: 2rem;
  }

  .layout {
    grid-template-columns:
      minmax(var(--gutter), 1fr) minmax(0, var(--max-width))
      minmax(var(--gutter), 1fr);
  }

  .grid-sidebar {
    height: 100vh;
    position: sticky;
    top: 0;
  }

  #grid-left {
    position: fixed;
    background-color: var(--theme-bg);
    z-index: 10;
    display: none;
  }

  #grid-main {
    grid-column: 2;
    display: flex;
    flex-direction: column;
    height: 100%;
  }

  #grid-right {
    display: none;
  }

  @media (min-width: 50em) {
    .layout {
      overflow: initial;
      grid-template-columns: 20rem minmax(0, var(--max-width));
      gap: 1em;
    }

    #grid-left {
      display: flex;
      padding-left: 2rem;
      position: sticky;
      grid-column: 1;
    }
  }

  @media (min-width: 72em) {
    .layout {
      grid-template-columns: 20rem minmax(0, var(--max-width)) 18rem;
      padding-left: 0;
      padding-right: 0;
      margin: 0 auto;
    }

    #grid-right {
      grid-column: 3;
      display: flex;
    }
  }
</style>
<style is:global>
  .layout > * {
    width: 100%;
    height: 100%;
  }

  .mobile-sidebar-toggle {
    overflow: hidden;
  }

  .mobile-sidebar-toggle #grid-left {
    display: block;
    padding: 1em;
    top: 2rem;
  }
</style>
